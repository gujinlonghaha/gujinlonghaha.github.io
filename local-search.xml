<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>pupeteer自动化加版本测试</title>
    <link href="/2020/04/08/pup/"/>
    <url>/2020/04/08/pup/</url>
    
    <content type="html"><![CDATA[<h1 id="多版本谷歌测试如何进行"><a href="#多版本谷歌测试如何进行" class="headerlink" title="多版本谷歌测试如何进行"></a>多版本谷歌测试如何进行</h1><p>没必要不更换谷歌浏览器吧？ 对答案是肯定的！今天主角帮你解决</p><h2 id="puppeteerjs"><a href="#puppeteerjs" class="headerlink" title="puppeteerjs"></a>puppeteerjs</h2><p>你可以在浏览器中手动执行的绝大多数操作都可以使用 Puppeteer 来完成！ 下面是一些示例：</p><ul><li>生成页面 PDF。</li><li>抓取 SPA（单页应用）并生成预渲染内容（即“SSR”（服务器端渲染））。</li><li>自动提交表单，进行 UI 测试，键盘输入等。</li><li>创建一个时时更新的自动化测试环境。 使用最新的 JavaScript 和浏览器功能直接在最新版本的Chrome中执行测试。</li><li>捕获网站的 <a href="https://developers.google.com/web/tools/chrome-devtools/evaluate-performance/reference">timeline trace</a>，用来帮助分析性能问题。</li><li>测试浏览器扩展。</li></ul><h3 id="他其中有个模块"><a href="#他其中有个模块" class="headerlink" title="他其中有个模块"></a>他其中有个模块</h3><p><img src="/2020/04/08/pup/1617851125113.png" alt="1617851125113"></p><p>那个就是版本号 其实你发现和咱们版本号不一样 后来我研究发现是这样的   <a href="https://omahaproxy.appspot.com/">地址</a>   需要fq</p><p><img src="/2020/04/08/pup/1617851262264.png" alt="1617851262264"></p><p>是第二个箭头也就是分支切换出来的版本号码</p><p>那他支持哪些版本呢  <a href="https://npm.taobao.org/mirrors/chromium-browser-snapshots/Win_x64/">地址</a>   淘宝给出了镜像地址   下面号码拿来直接用</p><p><img src="/2020/04/08/pup/1617851479500.png" alt="1617851479500"></p><p>现在谷歌浏览器都是下载安装器然后在线安装有没离线包 </p><p><a href="https://www.chromedownloads.net/chrome64win-stable/">福利</a></p><p><img src="/2020/04/08/pup/1617851464105.png" alt="1617851464105"></p><p>自己写的部分常用脚本 以防忘记</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><code class="hljs awk">const puppeteer = require(<span class="hljs-string">&#x27;puppeteer&#x27;</span>);<br>let operte=async(t) =&gt; &#123;<br><br>    <span class="hljs-regexp">//</span> 开启 browser<br>   const browserFetcher = puppeteer.createBrowserFetcher();<br>   const revisionInfo = await browserFetcher.download(<span class="hljs-string">&#x27;533271&#x27;</span>);  <span class="hljs-regexp">//</span>指定版本<br>    const vesion= await browserFetcher.localRevisions()<br>    console.log(vesion)<br>    let browser = await puppeteer.launch(&#123;<br>        executablePath: revisionInfo.executablePath,<br>        headless: false,<br>        defaultViewport: &#123;<br>            height: <span class="hljs-number">1080</span>,<br>            width: <span class="hljs-number">1920</span><br>        &#125;<br>    &#125;);<br>    <span class="hljs-regexp">//</span> 新增分页<br>    console.log(browser)<br>    let page = await browser.newPage();<br>    <span class="hljs-regexp">//</span> 到自己的网站<br>    await page.goto(`<span class="hljs-variable">$&#123;t&#125;</span>`);<br><br>     <span class="hljs-regexp">//</span> 等待订阅按钮出现<br>    <span class="hljs-regexp">//</span>  await page.waitForSelector(<span class="hljs-string">&quot;button[class=&#x27;subscribe-button pill-button&#x27;]&quot;</span>);<br>    <span class="hljs-regexp">//</span>  page.type(<span class="hljs-string">&#x27;#mytextarea&#x27;</span>, <span class="hljs-string">&#x27;Hello&#x27;</span>, &#123; delay: <span class="hljs-number">100</span> &#125;); <span class="hljs-regexp">//</span> 立即输入<br>    <span class="hljs-regexp">//</span>  page.type(<span class="hljs-string">&#x27;#mytextarea&#x27;</span>, <span class="hljs-string">&#x27;World&#x27;</span>, &#123; delay: <span class="hljs-number">100</span> &#125;); <span class="hljs-regexp">//</span> 输入变慢，像一个用户<br>    <span class="hljs-regexp">//</span>  <span class="hljs-regexp">//</span> 点击订阅按钮<br>    <span class="hljs-regexp">//</span>  await page.click(<span class="hljs-string">&quot;button[class=&#x27;subscribe-button pill-button&#x27;]&quot;</span>);<br>    <span class="hljs-regexp">//</span>   关闭标签页<br>    <span class="hljs-regexp">//</span> page.close()<br>    <span class="hljs-regexp">//</span> 关闭浏览器<br>    <span class="hljs-regexp">//</span> await browser.close();<br>&#125;<br><br>let arr=[<br>    <span class="hljs-string">&#x27;https://www.baidu.com/&#x27;</span>,<br>    <span class="hljs-regexp">//</span> <span class="hljs-string">&#x27;https://cn.bing.com/search?q=b%E6%A1%88&amp;PC=U316&amp;FORM=CHROMN&#x27;</span>,<br>]<br>arr.forEach(t =&gt; &#123;<br>    operte(t)<br>&#125;);<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>pupeteer</category>
      
    </categories>
    
    
    <tags>
      
      <tag>pupeteer</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>你好,朋友！</title>
    <link href="/2013/07/13/hellow/"/>
    <url>/2013/07/13/hellow/</url>
    
    <content type="html"><![CDATA[<p>我是GJL,一名前端程序猿</p><p>我的博客园地址  <a href="https://www.cnblogs.com/byksj/">查看</a></p><p>个人vscode 插件开发   <a href="https://marketplace.visualstudio.com/search?term=gjl&target=VSCode&category=All%20categories&sortBy=Relevance/">查看</a></p><p><img src="/2013/07/13/hellow/cj.png"></p><p>个人开发quicker 插件地址</p><p><img src="/2013/07/13/hellow/qk.png"></p><p>自动化部署脚本<a href="https://www.npmjs.com/package/depoly-gjl">查看</a></p><p><img src="/2013/07/13/hellow/1617784176762.png" alt="1617784176762"></p><p>个人小米自动化抢购脚本  <a href="https://www.cnblogs.com/byksj/p/14504972.html">查看</a></p><p><img src="/2013/07/13/hellow/1321821-20210309131947639-1780952264.gif"></p><p>这是一些过往欢快时刻</p><p><img src="/2013/07/13/hellow/ps2.jpg"></p><p>2020年<br><img src="/2013/07/13/hellow/tq.jpg"><br><img src="/2013/07/13/hellow/rb.jpg"></p><p><img src="/2013/07/13/hellow/ps.jpg"></p><p>2019年</p><p><img src="/2013/07/13/hellow/wl.jpg"><br>2016年</p><p><img src="/2013/07/13/hellow/lw.jpg"></p>]]></content>
    
    
    <categories>
      
      <category>自己</category>
      
    </categories>
    
    
    <tags>
      
      <tag>自己</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
