{"meta":{"title":"一直闭眼看世界博客","subtitle":"一个人的世界","description":"破而后立","author":"gjl","url":"https://gujinlonghaha.github.io"},"pages":[{"title":"about","date":"2015-04-02T05:16:38.000Z","updated":"2021-04-08T03:28:03.656Z","comments":false,"path":"about/index.html","permalink":"https://gujinlonghaha.github.io/about/index.html","excerpt":"","text":"我是一个程序员"}],"posts":[{"title":"pupeteer自动化加版本测试","slug":"pup","date":"2020-04-08T02:57:47.000Z","updated":"2021-04-08T03:28:03.652Z","comments":true,"path":"2020/04/08/pup/","link":"","permalink":"https://gujinlonghaha.github.io/2020/04/08/pup/","excerpt":"","text":"多版本谷歌测试如何进行没必要不更换谷歌浏览器吧？ 对答案是肯定的！今天主角帮你解决 puppeteerjs你可以在浏览器中手动执行的绝大多数操作都可以使用 Puppeteer 来完成！ 下面是一些示例： 生成页面 PDF。 抓取 SPA（单页应用）并生成预渲染内容（即“SSR”（服务器端渲染））。 自动提交表单，进行 UI 测试，键盘输入等。 创建一个时时更新的自动化测试环境。 使用最新的 JavaScript 和浏览器功能直接在最新版本的Chrome中执行测试。 捕获网站的 timeline trace，用来帮助分析性能问题。 测试浏览器扩展。 他其中有个模块 那个就是版本号 其实你发现和咱们版本号不一样 后来我研究发现是这样的 地址 需要fq 是第二个箭头也就是分支切换出来的版本号码 那他支持哪些版本呢 地址 淘宝给出了镜像地址 下面号码拿来直接用 现在谷歌浏览器都是下载安装器然后在线安装有没离线包 福利 自己写的部分常用脚本 以防忘记 1234567891011121314151617181920212223242526272829303132333435363738394041const puppeteer = require(&#x27;puppeteer&#x27;);let operte=async(t) =&gt; &#123; // 开启 browser const browserFetcher = puppeteer.createBrowserFetcher(); const revisionInfo = await browserFetcher.download(&#x27;533271&#x27;); //指定版本 const vesion= await browserFetcher.localRevisions() console.log(vesion) let browser = await puppeteer.launch(&#123; executablePath: revisionInfo.executablePath, headless: false, defaultViewport: &#123; height: 1080, width: 1920 &#125; &#125;); // 新增分页 console.log(browser) let page = await browser.newPage(); // 到自己的网站 await page.goto(`$&#123;t&#125;`); // 等待订阅按钮出现 // await page.waitForSelector(&quot;button[class=&#x27;subscribe-button pill-button&#x27;]&quot;); // page.type(&#x27;#mytextarea&#x27;, &#x27;Hello&#x27;, &#123; delay: 100 &#125;); // 立即输入 // page.type(&#x27;#mytextarea&#x27;, &#x27;World&#x27;, &#123; delay: 100 &#125;); // 输入变慢，像一个用户 // // 点击订阅按钮 // await page.click(&quot;button[class=&#x27;subscribe-button pill-button&#x27;]&quot;); // 关闭标签页 // page.close() // 关闭浏览器 // await browser.close();&#125;let arr=[ &#x27;https://www.baidu.com/&#x27;, // &#x27;https://cn.bing.com/search?q=b%E6%A1%88&amp;PC=U316&amp;FORM=CHROMN&#x27;,]arr.forEach(t =&gt; &#123; operte(t)&#125;);","categories":[{"name":"pupeteer","slug":"pupeteer","permalink":"https://gujinlonghaha.github.io/categories/pupeteer/"}],"tags":[{"name":"pupeteer","slug":"pupeteer","permalink":"https://gujinlonghaha.github.io/tags/pupeteer/"}],"keywords":[{"name":"pupeteer","slug":"pupeteer","permalink":"https://gujinlonghaha.github.io/categories/pupeteer/"}]},{"title":"你好,朋友！","slug":"hellow","date":"2013-07-13T12:46:25.000Z","updated":"2021-04-08T03:28:03.624Z","comments":true,"path":"2013/07/13/hellow/","link":"","permalink":"https://gujinlonghaha.github.io/2013/07/13/hellow/","excerpt":"","text":"我是GJL,一名前端程序猿 我的博客园地址 查看 个人vscode 插件开发 查看 个人开发quicker 插件地址 自动化部署脚本查看 个人小米自动化抢购脚本 查看 这是一些过往欢快时刻 2020年 2019年 2016年","categories":[{"name":"自己","slug":"自己","permalink":"https://gujinlonghaha.github.io/categories/%E8%87%AA%E5%B7%B1/"}],"tags":[{"name":"自己","slug":"自己","permalink":"https://gujinlonghaha.github.io/tags/%E8%87%AA%E5%B7%B1/"}],"keywords":[{"name":"自己","slug":"自己","permalink":"https://gujinlonghaha.github.io/categories/%E8%87%AA%E5%B7%B1/"}]}]}